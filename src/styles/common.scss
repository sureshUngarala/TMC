:root {
  --headings-font-family: Caveat, Roboto;
  --body-font-family: Lato, Roboto;
  --primary-color: #5bba47;
  --secondary-color: rgba(0, 0, 0, 0.85);
  --secondary-color-inverted: rgba(255, 255, 255, 0.85);
  --secondary-color-hovered: rgba(0, 0, 0, 0.75);
  --secondary-color-disabled: rgba(0, 0, 0, 0.5);
  --alternate-dark-orange: rgba(230, 128, 3, 1);
  --alternate-dark-orange-hovered: rgba(230, 128, 3, 0.75);
  --alert-color: #c91818;
  --mc-checkbox-size: 18px;
  --ul-handheld-width-on-hover: 110px;
  --form-box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  --focus-box-shadow: 0px 0px 0px 2px #5bba47;
  --focus-box-shadow-inset: inset 0px 0px 2px 2px #5bba47;
  --focus-box-shadow-secondary: 0px 0px 2px 2px rgba(0, 0, 0, 0.85);
  --transition: all 0.5s ease-in-out;
  --loader-gradient: #3d443b;
}

// Removing @mixins and scss variables to avoid cluttering duplicate CSS from this file.

input[type="button"],
input[type="submit"],
form,
a {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  padding: 0;
  margin: 0;
  outline: 0;
  text-decoration: none;
  color: var(--secondary-color-inverted);
  font-family: var(--headings-font-family) !important;
  font-style: normal;
}

h3,
h4 {
  margin: 0;
}

button,
input[type="button"],
input[type="submit"] {
  background-color: var(--secondary-color);
  color: var(--secondary-color-inverted);
  cursor: pointer;

  &:hover,
  &:focus {
    background-color: var(--secondary-color-hovered);
  }
}

input[type="submit"].disabled {
  background-color: var(--secondary-color-disabled);
  pointer-events: none;
  cursor: not-allowed;

  &:active,
  &:focus {
    border: 2px solid var(--primary-color);
  }
}

input[type="button"] {
  background-color: var(--secondary-color-disabled);

  &:hover,
  &:focus {
    background-color: var(--secondary-color-hovered);
  }

  &:active,
  &:focus {
    border: 1px solid var(--secondary-color);
  }
}

.mcHeader,
.mcFooter,
.highlight,
.aboutme .title,
.aboutme .name {
  font-family: var(--headings-font-family);
  font-style: normal;
}

textarea,
.MC-App,
.banner .refresh,
.home .fallback span,
.signin-form form input,
.swStatus button {
  font-family: var(--body-font-family);
  font-style: italic;
}

// flexXjustifyCentered
.mcBody,
.loadingContainer,
.home,
.uploadOrSignInContainer,
.uploadOrSignInContainer form {
  display: flex;
  justify-content: center;
}

// flexXalignCentered
.mcHeader,
.mcHeader .logoSection,
.mcHeader .actionSection,
.mcHeader .row,
.home .fallback,
.mcFooter {
  display: flex;
  align-items: center;
}

// flexXcentered
.categories,
.banner,
.imageActionFormContainer,
.upload-form,
.signin-form {
  display: flex;
  align-items: center;
  justify-content: center;
}

// initDropdownState => check ul li ul
.categories-dd ul,
.categories-dd ul li ul,
.profiles ul {
  opacity: 0;
  background-color: var(--secondary-color);
  display: none; //disable to get transition
  position: absolute;
  list-style: none;
  margin: 0;
  height: 0;
  top: 0;
  transition: var(--transition);
}

// showDropdown
.categories-dd,
.profiles {
  &:hover > ul,
  &:focus > ul,
  &:focus-within > ul,
  ul:hover,
  ul:focus,
  ul:focus-within,
  ul li:hover ul,
  ul li:focus ul,
  ul li:focus-within ul,
  ul li ul:hover,
  ul li ul:focus,
  ul li ul:focus-within,
  li.active ul,
  li.focus ul {
    opacity: 1;
    display: flex;
    height: auto;
    flex-direction: column;
    padding: 10px 0px;
    background-color: #f1f1f1;
    border-radius: 5px;
    width: 150px;
    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
    top: 100%;
  }
}

// focus
.categories-dd:hover .selectedCategory,
.categories-dd:focus .selectedCategory,
.editImage .actions > *:focus,
.banner .refresh:focus,
.images-container picture img:focus,
.categoryCard > a:focus,
.swStatus .close:focus {
  outline: none;
  box-shadow: var(--focus-box-shadow);
}

.logoSection:focus {
  outline: none;
  box-shadow: var(--focus-box-shadow-inset);
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(359deg);
  }
}

.categories {
  outline: none;

  .title {
    transform: translateX(-0.75em);
  }

  .categories-dd {
    position: relative;
    display: flex;
    justify-content: flex-start;
    font-size: 1.25rem;
    outline: none;

    .selectedCategory {
      position: relative;
      border: 1px solid var(--primary-color);
      border-radius: 4px;
      padding: 0px 1.25rem 0 0.5rem;
      font-weight: 600;
      width: 7rem;

      &[data-content="-"] {
        width: 5rem;
        text-align: center;
      }

      &::after {
        position: absolute;
        top: 50%;
        right: 0.5em;
        content: "\00a0\00a0\25BC";
        font-size: 0.5em;
        transform: translateY(-50%);
      }
    }

    &:hover > ul,
    &:focus > ul,
    ul:hover,
    ul:focus,
    ul:focus-within {
      background-color: var(--secondary-color);
      z-index: 10;
    }

    li {
      position: relative;
      color: var(--secondary-color-inverted);
      padding: 5px 0px 5px 10px;

      &:hover,
      &:focus,
      &.active {
        cursor: pointer;
        outline: none;
        background-color: var(--primary-color);
      }
    }

    ul li:hover ul,
    ul li:focus ul,
    ul li:focus-within ul,
    ul li ul:hover,
    ul li ul:focus,
    ul li ul:focus-within,
    li.active ul,
    li.focus ul {
      width: 155px;
      background-color: var(--secondary-color);
      top: 60%;
      left: 60%;
      z-index: 10;
    }

    ul li:focus-within {
      background-color: var(--primary-color);
    }
  }
}

.mcCheckboxContainer {
  position: relative;
  display: flex;
  cursor: pointer;

  input[type="checkbox"] {
    position: absolute;
    width: 1px;
    height: 1px;
    border: 0;
    opacity: 0;
    z-index: -1;
  }

  input[type="checkbox"] + .mcCheckboxHidden {
    position: absolute;
    width: var(--mc-checkbox-size);
    height: var(--mc-checkbox-size);
    border: 1px solid var(--secondary-color);
    border-radius: 3px;
    transition: all 150ms;
    z-index: 1;
  }

  input[type="checkbox"] + .mcCheckboxHidden:hover,
  input[type="checkbox"] + .mcCheckboxHidden:focus {
    box-shadow: 0 0 2px 2px var(--primary-color);
  }

  input[type="checkbox"]:active,
  input[type="checkbox"]:focus,
  input[type="checkbox"]:focus-within {
    & + .mcCheckboxHidden {
      box-shadow: 0 0 2px 2px var(--primary-color);
    }
  }

  input[type="checkbox"]:checked + .mcCheckboxHidden {
    background-color: var(--secondary-color);
  }

  input[type="checkbox"]:checked + .mcCheckboxHidden::before {
    top: 0px;
    left: 6px;
    content: "";
    width: 4px;
    position: absolute;
    height: 14px;
    border: solid var(--primary-color);
    border-width: 0 2px 2px 0;
    transform: rotate(38deg);
  }

  .mcCheckboxLabel {
    margin-left: calc(10px + #{var(--mc-checkbox-size)});
  }
}

.success {
  color: var(--primary-color);
}

.error {
  color: red;
}

.profileMenu {
  background-image: url("/assets/menu.svg");
  background-size: cover;
}

.enlarge {
  background-image: url("/assets/enlarge.svg");
}

.edit {
  background-image: url("/assets/edit.svg");
}

.delete {
  background-image: url("/assets/delete.svg");
}

.close {
  background-image: url("/assets/close.svg");
}

// imageActionBtn
.editImage .actions > *,
.mcModal .close,
.swStatus .close {
  width: 30px;
  height: 30px;
  top: 15px;
  right: 15px;
  background-repeat: no-repeat;
  background-position: center;
  border: 2px solid var(--secondary-color);
  border-radius: 50px;
  cursor: pointer;
}

// spinner
.loadingContainer .spinner,
.imageActionFormContainer .processing,
.uploadOrSignInContainer .processing,
.fetchingCurrentUserDetails {
  display: inline-block;
  background-image: url("/assets/spinner.svg");
  margin: 0 auto;
  background-size: cover;
  background-repeat: no-repeat;
  animation: rotation 0.5s infinite linear;
}
